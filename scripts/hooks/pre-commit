#!/bin/sh

if [ -n "$SKIP_METADATA_HOOK" ]; then
    exit 0
fi

current_user=$(git config user.name)
current_timestamp=$(date +"%Y-%m-%d %H:%M:%S")

get_comment_prefix() {
    case "$1" in
        *.py)
            echo "#"
            ;;
        *.sql|*.sqlx)
            echo "/*"
            ;;
        *)
            echo "#"
            ;;
    esac
}

get_comment_suffix() {
    case "$1" in
        *.sql|*.sqlx)
            echo "*/"
            ;;
        *)
            echo ""
            ;;
    esac
}


get_next_version() {
    file=$1
    comment_prefix=$(get_comment_prefix "$file")
    comment_suffix=$(get_comment_suffix "$file")
    last_version=$(awk -v prefix="$comment_prefix" -v suffix="$comment_suffix" '
        $0 ~ "^" prefix " -{80}" suffix { start=1; next }
        start && $0 ~ "^ " prefix "[A-Za-z0-9]+" { print $3; exit }
    ' "$file")
    
    if [ -z "$last_version" ] || ! [[ "$last_version" =~ ^[0-9]+\.[0-9]+$ ]]; then
        echo "1.0"
        return
    fi
    
    major_version=$(echo "$last_version" | cut -d. -f1)
    minor_version=$(echo "$last_version" | cut -d. -f2)
    
    new_minor_version=$((minor_version + 1))
    if [ "$new_minor_version" -eq "10" ]; then
        new_major_version=$((major_version + 1))
        new_minor_version="0"
    else
        new_major_version="$major_version"
    fi
    
    echo "$new_major_version.$new_minor_version"
}

update_metadata() {
    file=$1
    comment_prefix=$(get_comment_prefix "$file")
    comment_suffix=$(get_comment_suffix "$file")
    temp_message="PENDING_COMMIT_MESSAGE"

    # Robustly remove any existing metadata header
    sed -i -E "/\/\* creator name:/,/\*\//d" "$file"

    # Add the new metadata header
    {
        if [ "$comment_prefix" = "/*" ]; then
            echo "/* creator name: $current_user"
            echo " creation time: $current_timestamp"
            echo " Modified by         Version          Modified timestamp      Commit message"
            echo " --------------------------------------------------------------------------------"
            printf " %-20s %-15s %-23s %s\n" "$current_user" "$(get_next_version "$file")" "$current_timestamp" "$temp_message"
            echo "*/"
        else
            echo "${comment_prefix} creator name: $current_user"
            echo "${comment_prefix} creation time: $current_timestamp"
            echo "${comment_prefix} Modified by         Version          Modified timestamp      Commit message"
            echo "${comment_prefix} --------------------------------------------------------------------------------"
            printf "%s %-20s %-15s %-23s %s\n" "$comment_prefix" "$current_user" "$(get_next_version "$file")" "$current_timestamp" "$temp_message"
        fi
        echo ""
        cat "$file"
    } > "$file.tmp"
    mv "$file.tmp" "$file"

    export SKIP_METADATA_HOOK=1
    git add "$file"
    unset SKIP_METADATA_HOOK
}

for file in $(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(sqlx|sql|py)$'); do
    echo "$file" >> .git/TRACKED_FILES
    update_metadata "$file"
done

exit 0